name: Build & test project

on:
  push:
  schedule:
    - cron: "0 6 * * *"

jobs:
  build-frontend:
    name: Check frontendservice
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Update rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true
      - name: Build frontendservice
        working-directory: frontendservice
        run: cargo build
        env:
          RUST_LOG: frontend=info
      - name: Check format frontendservice
        working-directory: frontendservice
        run: cargo fmt -- --check

  build-quotation:
    name: Check quotationservice
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true
      - name: Build quotationservice
        working-directory: quotationservice
        run: cargo build
        env:
          RUST_LOG: quotation=info
      - name: Check format quotationservice
        working-directory: quotationservice
        run: cargo fmt -- --check

  integration-test:
    name: Integration test
    if: "!contains(github.event.head_commit.message, 'e2e skip') && !contains(github.event.head_commit.message, 'skip e2e')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Install latest version of Kind
        run: GO111MODULE=on go get sigs.k8s.io/kind
      - run: PATH=$(go env GOPATH)/bin:$PATH kind version
      - name: Create Kind cluster
        run: PATH=$(go env GOPATH)/bin:$PATH kind create cluster --config kind-config.yaml
      - name: Install metallb
        run: kubectl apply -f https://raw.githubusercontent.com/google/metallb/v0.8.3/manifests/metallb.yaml
      - name: Install skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
          chmod +x skaffold
      - run: ./skaffold version
      - name: Create postgres password
        run: kubectl create secret generic postgres-password --from-literal=pgpassword=panda
      - name: Start application
        run: ./skaffold run
      - name: Wait for kubectl rollout status
        run: |
          kubectl rollout status --timeout 2m -w deployments/postgres-deployment
          kubectl rollout status --timeout 2m -w deployments/quotationservice
          kubectl rollout status --timeout 2m -w deployments/frontendservice
      - name: Run integration test
        run: |
          SERVICE_IP=$(kubectl get svc --selector=app=frontend,component=loadbalancer -o json | jq --raw-output ".items[0].status.loadBalancer.ingress[0].ip")
          test 200 = $(curl -sL -w "%{http_code}\\n" http://$SERVICE_IP -o /dev/null)
